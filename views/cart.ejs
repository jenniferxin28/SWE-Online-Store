<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../components/header') %>
  <style>
    .cart-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 0;
      border-bottom: 1px solid #ccc;
    }

    .cart-item:last-child {
      border-bottom: none;
    }

    .cart-total {
      margin-top: 20px;
      text-align: right;
      font-weight: bold;
      font-size: 1.2em;
    }

    .remove-btn {
      background-color: #dc3545;
      color: white;
      border: none;
      padding: 5px 10px;
      border-radius: 4px;
      cursor: pointer;
    }

    .remove-btn:hover {
      background-color: #c82333;
    }

    .cart-actions {
      display: flex;
      justify-content: space-between;
      margin-top: 20px;
    }

    .cart-actions .btn {
      flex: 0 0 auto;
    }
  </style>
</head>
<body>
  <%- include('../components/navbar') %>
  <main class="container mt-5">
    <h1>Shopping Cart</h1>
    <p>Welcome, <%= username %>! Here is your shopping cart:</p>

    <!-- Cart items -->
    <div>
      <% let totalCost = 0; %>
      <% cartItems.forEach(item => { %>
        <% totalCost += item.price * item.quantity; %>
        <div class="cart-item">
          <span><%= item.productName %> - $<%= item.price %> x <%= item.quantity %></span>
          <form action="/users/cart/remove" method="post">
            <input type="hidden" name="productID" value="<%= item.productID %>">
            <button type="submit" class="remove-btn">Remove</button>
          </form>
        </div>
      <% }) %>
    </div>

    <!-- Total cost -->
    <div class="cart-total">
      Total: $<%= totalCost.toFixed(2) %>
    </div>

    <!-- PayPal button container -->
    <div id="paypal-button-container"></div>

    <!-- Actions: Place Order and Continue Shopping -->
    <div class="cart-actions">
      <form action="/users/cart/place-order" method="post">
        <button type="submit" class="btn btn-success">Place Order</button>
      </form>
      <a href="/" class="btn btn-primary">Continue Shopping</a>
    </div>
  </main>

  <!-- PayPal SDK script -->
  <script src="https://www.paypal.com/sdk/js?client-id=AbqAGEQazItY88IShmgn0ayvVIvWSGcCgyPBRGHbhiA-lqnkgZ6sVx2w9cjZsS1xPMtj3utJ5nlD31Cu&currency=USD"></script>

  <script>
    // Initialize the PayPal button
    paypal.Buttons({
      createOrder: async (data, actions) => {
        // Make the request to create an order with the total price
        const response = await fetch('/api/payments/create-order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ amount: '<%= totalCost.toFixed(2) %>' })  // Use the dynamic total cost here
        });
        if (!response.ok) {
          console.error('Error creating order:', await response.text());
          alert('Failed to create order. Please try again.');
          return;
        }
        const orderData = await response.json();
        
        // Return the order ID to PayPal
        return orderData.id;
      },
      onApprove: async (data, actions) => {
        // Capture the payment after approval
        const response = await fetch('/api/payments/capture-order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ orderId: data.orderID })
        });
        if (!response.ok) {
          console.error('Error capturing order:', await response.text());
          alert('Payment capture failed. Please contact support.');
          return;
        }
        const captureData = await response.json();

        // Redirect to the order success page
        window.location.href = `/order-success?orderId=${captureData.orderId}`;
      },
      onError: (err) => {
        // Handle any errors that occur during the payment process
        console.error('PayPal Error:', err);
        alert('Payment failed. Please try again.');
      }
    }).render('#paypal-button-container');  // Render the button inside the specified container
  </script>
</body>
</html>
